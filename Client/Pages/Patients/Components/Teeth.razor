@using DentistryManagement.Shared.ViewModels.Teeth

@inject HttpClient Http

@if (teethCategories != null)
{
    <table class="grph-teeth-table">
        <tbody>
            <tr class="grph-teeth-tr">
                @foreach (var tooth in teethCategories.UpperRight)
                {
                    <Tooth Url="@("images/teeth/" + tooth.Url)" ToothId="@tooth.Id" HasDiseases="@tooth.HasDiseases"/>
                }
                @foreach (var tooth in teethCategories.UpperLeft)
                {
                    <Tooth Url="@("images/teeth/" + tooth.Url)" ToothId="@tooth.Id" HasDiseases="@tooth.HasDiseases"/>
                }
            </tr>
            <tr class="grph-teeth-tr">
                @foreach (var tooth in teethCategories.LowerRight)
                {
                    <Tooth Url="@("images/teeth/" + tooth.Url)" ToothId="@tooth.Id" HasDiseases="@tooth.HasDiseases"/>
                }
                @foreach (var tooth in teethCategories.LowerLeft)
                {
                    <Tooth Url="@("images/teeth/" + tooth.Url)" ToothId="@tooth.Id" HasDiseases="@tooth.HasDiseases"/>
                }
            </tr>
        </tbody>
    </table>

}

@code {
    [Parameter]
    public int MedicalChartId { get; set; }

    private TeethCategoryViewModel teethCategories;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            teethCategories = await Http.GetFromJsonAsync<TeethCategoryViewModel>("api/MedicalChart/" + MedicalChartId + "/Teeth");
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
    }
}