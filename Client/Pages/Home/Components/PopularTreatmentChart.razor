@using DentistryManagement.Shared.ViewModels.Treatments
@using DentistryManagement.Client.Components

<div class="grph-paper">
    <div class="grph-chart-datetime">
        <h5>Most popular treatments</h5>
        <div hidden="@(!DataExist)">
            <SfAccumulationChart EnableSmartLabels="true" @ref="Chart">
                <AccumulationChartEvents Loaded="AfterRender" />
                <AccumulationChartTooltipSettings Enable="true"></AccumulationChartTooltipSettings>
                <AccumulationChartLegendSettings Visible="false"></AccumulationChartLegendSettings>
                <AccumulationChartSeriesCollection>
                    <AccumulationChartSeries DataSource="@PopularTreatment.Treatments" XName="Name" YName="Count" Name="Treatment" Radius="@OuterRadius" StartAngle="@StartAngle" EndAngle="@EndAngle"
                                             InnerRadius="0%" ExplodeIndex="@ExplodeIndex" Explode="true" ExplodeOffset="@ExplodeRadius">
                        <AccumulationDataLabelSettings Visible="@DataExist" Name="Name" Position="AccumulationLabelPosition.Outside"></AccumulationDataLabelSettings>
                    </AccumulationChartSeries>
                </AccumulationChartSeriesCollection>
            </SfAccumulationChart>
        </div>  
    </div>
</div>

@code {
    [Parameter]
    public PopularTreatmentViewModel PopularTreatment { get; set; }

    SfAccumulationChart Chart;

    public int StartAngle = 0, value = 0, EndAngle = 360, radiusValue = 70, exploderadius = 10;

    public double ExplodeIndex = 1;

    public string OuterRadius = "70%", ExplodeRadius = "10%";

    private bool DataExist => PopularTreatment.Treatments.Count > 0 ? true : false;

    private bool Initializing = true;

    public void AfterRender(AccumulationLoadedEventArgs action)
    {
        Initializing = false;
    }

    public void RefreshLiveData(PopularTreatmentViewModel popularTreatment)
    {
        if (popularTreatment.Treatments.Count == 0)
        {
            return;
        }

        PopularTreatment = popularTreatment;
        StateHasChanged();
        Chart.Refresh();
    }
}
