@using DentistryManagement.Shared.ViewModels
@using DentistryManagement.Client.Pages.Users
@using DentistryManagement.Client.Helpers
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Net
@using System.Net.Http.Json
@using Microsoft.Extensions.Logging

@inject ILogger<Users> Logger
@inject HttpClient Http

<div class="grph-modal-form">
    <EditForm Model="@AddUserViewModel" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <CustomValidator @ref="customValidator" />

        <p class="validation-message" style="@messageStyles">
            @message
        </p>

        <div class="row">
            <div class="col">
                <MatTextField @bind-Value="AddUserViewModel.FirstName" Label="First Name" Outlined="true"></MatTextField>
                <ValidationMessage For="@(() => AddUserViewModel.FirstName)" />
            </div>
            <div class="col">
                <MatTextField @bind-Value="AddUserViewModel.LastName" Label="Last Name" Outlined="true"></MatTextField>
                <ValidationMessage For="@(() => AddUserViewModel.LastName)" />
            </div>
        </div>
        <div class="row">
            <div class="col">
                <MatTextField @bind-Value="AddUserViewModel.Email" Label="Email" Outlined="true"></MatTextField>
                <ValidationMessage For="@(() => AddUserViewModel.Email)" />
            </div>
            <div class="col">
                <MatTextField @bind-Value="AddUserViewModel.Password" Label="Password" Outlined="true"></MatTextField>
                <ValidationMessage For="@(() => AddUserViewModel.Password)" />
            </div>
        </div>

        <div class="row">
            <div class="col">
                <MatCheckbox Class="grph-checkbox" @bind-Value="AddUserViewModel.IsAdmin" Label="Admin"></MatCheckbox>
            </div>
        </div>

        <div class="input-group grph-button-actions">
            <button class="btn btn-primary grph-cancel" @onclick="BlazoredModal.Cancel">Cancel</button>
            <button class="btn btn-primary grph-primary" disabled="@disabled">Create User</button>
        </div>

    </EditForm>
</div>

@code {
    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; }

    private bool disabled;

    private string message;

    private string messageStyles = "display:none";

    private CreateUserViewModel AddUserViewModel = new CreateUserViewModel();

    private CustomValidator customValidator;

    private string Email { set; get; }

    private void HandleEmail(ChangeEventArgs arg)
    {
        Email = arg.Value?.ToString();
        AddUserViewModel.Email = Email;
        StateHasChanged();
    }

    private async Task HandleValidSubmit()
    {
        customValidator.ClearErrors();

        try
        {
            var response = await Http.PostAsJsonAsync("api/User", AddUserViewModel);

            if (response.StatusCode == HttpStatusCode.BadRequest)
            {
                var errors = await response.Content
                    .ReadFromJsonAsync<Dictionary<string, List<string>>>();

                if (errors.Count > 0)
                {
                    customValidator.DisplayErrors(errors);
                }
            }
            else
            {
                await BlazoredModal.Close(ModalResult.Ok(response));
            }
        }
        catch (AccessTokenNotAvailableException exception)
        {
            exception.Redirect();
        }
        catch (Exception exception)
        {
            Logger.LogError("Form processing error: {Message}", exception.Message);
            disabled = true;
            messageStyles = "display:block";
            message = "There was an error processing the form.";
        }
    }
}
